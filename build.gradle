buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'

version = '1.0'
group = 'com.assassinymo.farmntech'
archivesBaseName = 'farmntech'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.18.2'

     accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') 

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'farmntech'

            mods {
                farmntech {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'farmntech'

            mods {
                farmntech {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'farmntech'

            mods {
                farmntech {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'farmntech', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                farmntech {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		name = "Progwml6 maven"
		url = "https://dvs1.progwml8.com/files/maven/"
	}
	maven {
		name = "CurseForge"
		url = "https://www.cursemaven.com"
	}
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.80'

//    implementation fg.deobf("mezz.jei:jei-1.16.5:${project.jei}:api")
//    implementation fg.deobf("mezz.jei:jei-1.16.5:${project.jei}")

//    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${project.jer}")
//    implementation fg.deobf("curse.maven:just-enough-effect-descriptions-jeed-532286:${project.jeed}")

//    implementation fg.deobf("curse.maven:appleskin-248787:${project.appleskin}")

//    implementation fg.deobf("curse.maven:configured-457570:${project.configured}")
//    implementation fg.deobf("curse.maven:catalogue-459701:${project.catalogue}")

//    implementation fg.deobf("curse.maven:the-one-probe-245211:${project.top}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "farmntech",
                "Specification-Vendor"    : "assassinymo",
                "Specification-Version"   : "1", 
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "assassinymo",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' 
}
